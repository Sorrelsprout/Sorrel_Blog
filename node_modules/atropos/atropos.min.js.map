{"version":3,"sources":["../src/atropos.js"],"names":["$","el","sel","querySelector","$setDuration","duration","style","transitionDuration","$setTransform","transform","$setOpacity","opacity","$on","event","handler","props","addEventListener","$off","removeEventListener","removeUndefinedProps","obj","result","Object","keys","forEach","key","originalParams","rotateEl","rotated","scaleEl","innerEl","enterRotateX","enterRotateY","elBoundingClientRect","eventsElBoundingClientRect","shadowEl","highlightEl","created","_originalParams","eventsEl","self","__atropos__","params","_extends","activeOffset","shadowOffset","shadowScale","durationEnter","durationLeave","rotateLock","rotate","rotateTouch","rotateXMax","rotateYMax","rotateXInvert","rotateYInvert","stretchX","stretchY","shadow","highlight","onEnter","onLeave","onRotate","destroyed","isActive","rotateXLock","rotateYLock","setChildrenOffset","_ref","_ref$rotateXPercentag","rotateXPercentage","_ref$rotateYPercentag","rotateYPercentage","opacityOnly","querySelectorAll","$$","childEl","elementOpacity","element","dataset","atroposOpacity","split","map","v","parseFloat","getOpacity","childElOffset","atroposOffset","Number","isNaN","min","max","rotatePercentage","Math","abs","onPointerEnter","e","type","pointerType","preventDefault","classList","add","undefined","onTouchMove","cancelable","onPointerMove","clientX","clientY","getBoundingClientRect","rotateX","rotateY","_elBoundingClientRect","top","left","width","height","centerX","centerY","coordX","coordY","_eventsElBoundingClie","parentTop","parentLeft","parentWidth","parentHeight","onPointerLeave","remove","onDocumentClick","clickTarget","target","contains","destroy","document","assign","createElement","appendChild","createHighlight"],"mappings":"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","file":"atropos.min.js","sourcesContent":["/* eslint-disable no-restricted-globals */\nconst $ = (el, sel) => el.querySelector(sel);\nconst $$ = (el, sel) => el.querySelectorAll(sel);\nconst $setDuration = (el, duration) => {\n  el.style.transitionDuration = duration;\n};\nconst $setTransform = (el, transform) => {\n  el.style.transform = transform;\n};\nconst $setOpacity = (el, opacity) => {\n  el.style.opacity = opacity;\n};\nconst $on = (el, event, handler, props) => el.addEventListener(event, handler, props);\nconst $off = (el, event, handler, props) => el.removeEventListener(event, handler, props);\n\nconst removeUndefinedProps = (obj = {}) => {\n  const result = {};\n  Object.keys(obj).forEach((key) => {\n    if (typeof obj[key] !== 'undefined') result[key] = obj[key];\n  });\n  return result;\n};\n\nfunction Atropos(originalParams = {}) {\n  let { el, eventsEl } = originalParams;\n\n  const self = {\n    __atropos__: true,\n    params: {\n      activeOffset: 50,\n      shadowOffset: 50,\n      shadowScale: 1,\n      durationEnter: 300,\n      durationLeave: 600,\n      rotateLock: true,\n      rotate: true,\n      rotateTouch: true,\n      rotateXMax: 15,\n      rotateYMax: 15,\n      rotateXInvert: false,\n      rotateYInvert: false,\n      stretchX: 0,\n      stretchY: 0,\n      shadow: true,\n      highlight: true,\n      onEnter: null,\n      onLeave: null,\n      onRotate: null,\n      ...removeUndefinedProps(originalParams || {}),\n    },\n    destroyed: false,\n    isActive: false,\n  };\n\n  const { params } = self;\n\n  let rotateEl;\n  let rotated;\n  let scaleEl;\n  let innerEl;\n\n  let enterRotateX;\n  let enterRotateY;\n\n  let elBoundingClientRect;\n  let eventsElBoundingClientRect;\n\n  let rotateXLock = true;\n  let rotateYLock = true;\n\n  let shadowEl;\n  let highlightEl;\n\n  const createShadow = () => {\n    let created;\n    shadowEl = $(el, '.atropos-shadow');\n    if (!shadowEl) {\n      shadowEl = document.createElement('span');\n      shadowEl.classList.add('atropos-shadow');\n      created = true;\n    }\n    $setTransform(\n      shadowEl,\n      `translate3d(0,0,-${params.shadowOffset}px) scale(${params.shadowScale})`,\n    );\n    if (created) {\n      rotateEl.appendChild(shadowEl);\n    }\n  };\n  const createHighlight = () => {\n    let created;\n    highlightEl = $(el, '.atropos-highlight');\n    if (!highlightEl) {\n      highlightEl = document.createElement('span');\n      highlightEl.classList.add('atropos-highlight');\n      created = true;\n    }\n\n    $setTransform(highlightEl, `translate3d(0,0,0)`);\n    if (created) {\n      innerEl.appendChild(highlightEl);\n    }\n  };\n\n  const setChildrenOffset = ({\n    rotateXPercentage = 0,\n    rotateYPercentage = 0,\n    duration,\n    opacityOnly,\n  }) => {\n    const getOpacity = (element) => {\n      if (element.dataset.atroposOpacity && typeof element.dataset.atroposOpacity === 'string') {\n        return element.dataset.atroposOpacity.split(';').map((v) => parseFloat(v));\n      }\n      return undefined;\n    };\n    $$(el, '[data-atropos-offset], [data-atropos-opacity]').forEach((childEl) => {\n      $setDuration(childEl, duration);\n      const elementOpacity = getOpacity(childEl);\n      if (rotateXPercentage === 0 && rotateYPercentage === 0) {\n        if (!opacityOnly) $setTransform(childEl, `translate3d(0, 0, 0)`);\n        if (elementOpacity) $setOpacity(childEl, elementOpacity[0]);\n      } else {\n        const childElOffset = parseFloat(childEl.dataset.atroposOffset) / 100;\n        if (!Number.isNaN(childElOffset) && !opacityOnly) {\n          $setTransform(\n            childEl,\n            `translate3d(${-rotateYPercentage * -childElOffset}%, ${\n              rotateXPercentage * -childElOffset\n            }%, 0)`,\n          );\n        }\n        if (elementOpacity) {\n          const [min, max] = elementOpacity;\n          const rotatePercentage = Math.max(\n            Math.abs(rotateXPercentage),\n            Math.abs(rotateYPercentage),\n          );\n          $setOpacity(childEl, min + ((max - min) * rotatePercentage) / 100);\n        }\n      }\n    });\n  };\n\n  const onPointerEnter = (e) => {\n    if (e.type === 'pointerdown' && e.pointerType === 'mouse') return;\n    if (e.type === 'pointerenter' && e.pointerType !== 'mouse') return;\n    if (e.type === 'pointerdown') {\n      e.preventDefault();\n    }\n    el.classList.add('atropos-active');\n    $setDuration(rotateEl, '0ms');\n    rotated = false;\n    enterRotateX = undefined;\n    enterRotateY = undefined;\n    rotateXLock = true;\n    rotateYLock = true;\n    $setTransform(scaleEl, `translate3d(0,0, ${params.activeOffset}px)`);\n    $setDuration(scaleEl, `${params.rotateLock ? params.durationEnter : 0}ms`);\n    if (shadowEl) {\n      $setDuration(shadowEl, `${params.rotateLock ? params.durationEnter : 0}ms`);\n    }\n\n    self.isActive = true;\n    if (typeof params.onEnter === 'function') params.onEnter();\n  };\n\n  const onTouchMove = (e) => {\n    if (rotated && e.cancelable) {\n      e.preventDefault();\n    }\n  };\n\n  const onPointerMove = (e) => {\n    if (!params.rotate || !self.isActive) return;\n    if (e.pointerType !== 'mouse') {\n      if (!params.rotateTouch) return;\n      e.preventDefault();\n    }\n    const { clientX, clientY } = e;\n    if (!elBoundingClientRect) {\n      elBoundingClientRect = el.getBoundingClientRect();\n    }\n    if (el !== eventsEl && !eventsElBoundingClientRect) {\n      eventsElBoundingClientRect = eventsEl.getBoundingClientRect();\n    }\n    let rotateX = 0;\n    let rotateY = 0;\n    const { top, left, width, height } = elBoundingClientRect;\n    if (el === eventsEl) {\n      const centerX = width / 2;\n      const centerY = height / 2;\n\n      const coordX = clientX - left;\n      const coordY = clientY - top;\n\n      rotateY = ((params.rotateYMax * (coordX - centerX)) / (width / 2)) * -1;\n      rotateX = (params.rotateXMax * (coordY - centerY)) / (height / 2);\n    } else {\n      const {\n        top: parentTop,\n        left: parentLeft,\n        width: parentWidth,\n        height: parentHeight,\n      } = eventsElBoundingClientRect;\n      const offsetLeft = left - parentLeft;\n      const offsetTop = top - parentTop;\n\n      const centerX = width / 2 + offsetLeft;\n      const centerY = height / 2 + offsetTop;\n\n      const coordX = clientX - parentLeft;\n      const coordY = clientY - parentTop;\n\n      rotateY = ((params.rotateYMax * (coordX - centerX)) / (parentWidth - width / 2)) * -1;\n      rotateX = (params.rotateXMax * (coordY - centerY)) / (parentHeight - height / 2);\n    }\n\n    if (params.rotateLock) {\n      if (typeof enterRotateY === 'undefined') {\n        enterRotateY = rotateY;\n        rotateYLock = true;\n      }\n      if (typeof enterRotateX === 'undefined') {\n        enterRotateX = rotateX;\n        rotateXLock = true;\n      }\n      if (rotateYLock) {\n        if (enterRotateY < 0) {\n          if (rotateY < 0) rotateY = 0;\n          if (rotateY > 0) rotateYLock = false;\n        }\n        if (enterRotateY > 0) {\n          if (rotateY > 0) rotateY = 0;\n          if (rotateY < 0) rotateYLock = false;\n        }\n      }\n      if (rotateXLock) {\n        if (enterRotateX < 0) {\n          if (rotateX < 0) rotateX = 0;\n          if (rotateX > 0) rotateXLock = false;\n        }\n        if (enterRotateX > 0) {\n          if (rotateX > 0) rotateX = 0;\n          if (rotateX < 0) rotateXLock = false;\n        }\n      }\n    }\n\n    rotateX = Math.min(Math.max(-rotateX, -params.rotateXMax), params.rotateXMax);\n    if (params.rotateXInvert) rotateX = -rotateX;\n    rotateY = Math.min(Math.max(-rotateY, -params.rotateYMax), params.rotateYMax);\n    if (params.rotateYInvert) rotateY = -rotateY;\n\n    if (typeof params.rotateTouch === 'string' && (rotateX !== 0 || rotateY !== 0)) {\n      if (!rotated) {\n        rotated = true;\n        el.classList.add('atropos-rotate-touch');\n      }\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n    }\n    const rotateXPercentage = (rotateX / params.rotateXMax) * 100;\n    const rotateYPercentage = (rotateY / params.rotateYMax) * 100;\n\n    const stretchX =\n      (el !== eventsEl ? (rotateYPercentage / 100) * params.stretchX : 0) *\n      (params.rotateYInvert ? -1 : 1);\n    const stretchY =\n      (el !== eventsEl ? (rotateXPercentage / 100) * params.stretchY : 0) *\n      (params.rotateXInvert ? -1 : 1);\n\n    $setTransform(\n      rotateEl,\n      `translate3d(${stretchX}%, ${-stretchY}%, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`,\n    );\n\n    if (highlightEl) {\n      $setDuration(highlightEl, '0ms');\n      $setTransform(\n        highlightEl,\n        `translate3d(${-rotateYPercentage * 0.25}%, ${rotateXPercentage * 0.25}%, 0)`,\n      );\n      highlightEl.style.opacity =\n        Math.max(Math.abs(rotateXPercentage), Math.abs(rotateYPercentage)) / 100;\n    }\n\n    setChildrenOffset({ rotateXPercentage, rotateYPercentage, duration: '0ms' });\n\n    if (typeof params.onRotate === 'function') params.onRotate(rotateX, rotateY);\n  };\n\n  const onPointerLeave = (e) => {\n    elBoundingClientRect = undefined;\n    eventsElBoundingClientRect = undefined;\n    if (!self.isActive) return;\n    if (e && e.type === 'pointerup' && e.pointerType === 'mouse') return;\n    if (e && e.type === 'pointerleave' && e.pointerType !== 'mouse') return;\n    if (typeof params.rotateTouch === 'string' && rotated) {\n      el.classList.remove('atropos-rotate-touch');\n    }\n    el.classList.remove('atropos-active');\n    $setTransform(scaleEl, `translate3d(0,0, ${0}px)`);\n    $setDuration(scaleEl, `${params.durationLeave}ms`);\n    if (shadowEl) {\n      $setDuration(shadowEl, `${params.durationLeave}ms`);\n    }\n    if (highlightEl) {\n      $setDuration(highlightEl, `${params.durationLeave}ms`);\n      $setTransform(highlightEl, `translate3d(0, 0, 0)`);\n      highlightEl.style.opacity = 0;\n    }\n    $setDuration(rotateEl, `${params.durationLeave}ms`);\n    $setTransform(rotateEl, `translate3d(0,0,0) rotateX(0deg) rotateY(0deg)`);\n\n    setChildrenOffset({ duration: `${params.durationLeave}ms` });\n    self.isActive = false;\n    if (typeof params.onRotate === 'function') params.onRotate(0, 0);\n    if (typeof params.onLeave === 'function') params.onLeave();\n  };\n\n  const onDocumentClick = (e) => {\n    const clickTarget = e.target;\n    if (!eventsEl.contains(clickTarget) && clickTarget !== eventsEl && self.isActive) {\n      onPointerLeave();\n    }\n  };\n\n  const initDOM = () => {\n    if (typeof el === 'string') {\n      el = $(document, el);\n    }\n    if (!el) return;\n\n    // eslint-disable-next-line\n    if (el.__atropos__) return;\n\n    if (typeof eventsEl !== 'undefined') {\n      if (typeof eventsEl === 'string') {\n        eventsEl = $(document, eventsEl);\n      }\n    } else {\n      eventsEl = el;\n    }\n\n    Object.assign(self, {\n      el,\n    });\n\n    rotateEl = $(el, '.atropos-rotate');\n    scaleEl = $(el, '.atropos-scale');\n    innerEl = $(el, '.atropos-inner');\n\n    // eslint-disable-next-line\n    el.__atropos__ = self;\n  };\n\n  const init = () => {\n    initDOM();\n    if (!el || !eventsEl) return;\n    if (params.shadow) {\n      createShadow();\n    }\n    if (params.highlight) {\n      createHighlight();\n    }\n    if (params.rotateTouch) {\n      if (typeof params.rotateTouch === 'string') {\n        el.classList.add(`atropos-rotate-touch-${params.rotateTouch}`);\n      } else {\n        el.classList.add('atropos-rotate-touch');\n      }\n    }\n    if ($(el, '[data-atropos-opacity]')) {\n      setChildrenOffset({ opacityOnly: true });\n    }\n    $on(document, 'click', onDocumentClick);\n    $on(eventsEl, 'pointerdown', onPointerEnter);\n    $on(eventsEl, 'pointerenter', onPointerEnter);\n    $on(eventsEl, 'pointermove', onPointerMove);\n    $on(eventsEl, 'touchmove', onTouchMove);\n    $on(eventsEl, 'pointerleave', onPointerLeave);\n    $on(eventsEl, 'pointerup', onPointerLeave);\n    $on(eventsEl, 'lostpointercapture', onPointerLeave);\n  };\n\n  const destroy = () => {\n    self.destroyed = true;\n    $off(document, 'click', onDocumentClick);\n    $off(eventsEl, 'pointerdown', onPointerEnter);\n    $off(eventsEl, 'pointerenter', onPointerEnter);\n    $off(eventsEl, 'pointermove', onPointerMove);\n    $off(eventsEl, 'touchmove', onTouchMove);\n    $off(eventsEl, 'pointerleave', onPointerLeave);\n    $off(eventsEl, 'pointerup', onPointerLeave);\n    $off(eventsEl, 'lostpointercapture', onPointerLeave);\n    // eslint-disable-next-line\n    delete el.__atropos__;\n  };\n\n  self.destroy = destroy;\n\n  init();\n\n  // eslint-disable-next-line\n  return self;\n}\nexport { Atropos };\nexport default Atropos;\n"]}